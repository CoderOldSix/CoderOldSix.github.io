[ { "title": "【DX HLSL】HLSL内置函数", "url": "/posts/HLSL-%E5%86%85%E7%BD%AE%E5%87%BD%E6%95%B0/", "categories": "HLSL, DX, Shader", "tags": "UE4, DX, Shader", "date": "2022-07-02 00:55:00 +0800", "snippet": "数学函数abs(x) 返回输入参数的绝对值acos(x) 反余切函数，输入参数范围为[-1,1]， 返回[0,π]区间的角度值all(x) 如果输入参数均不为0，则返回ture； 否则返回flase。&amp;&amp;运算any(x) 输入参数只要有其中一个不为0，则返回true。asin(x) 反正弦函数,输入参数取值区间为[−1,1]，返回角度值范围为, [−π/2,π/2]atan(x) 反正切函数，返回角度值范围为[−π/2,π/2]atan2(y,x) 计算y/x的反正切值。实际上和atan(x)函数功能完全一样，至少输入参数不同。atan(x) atan2(x, float(1))。ceil(x) 对输入参数向上取整。例如： ceil(float(1.3)) ，其返回值为2.0clamp(x,a,b) 如果x值小于a，则返回a；如果x值大于b，返回b；否则，返回x。cos(x) 返回弧度x的余弦值。返回值范围为[−1,1]cosh(x) 双曲余弦（hyperbolic cosine）函数，计算x的双曲余弦值。cross(A,B) 返回两个三元向量的叉积(cross product)。注意，输入参数必须是三元向量！dot(A,B) 返回A和B的点积(dot product)。参数A和B可以是标量，也可以是向量mul(M, N) 矩阵M和矩阵N的积mul(M, v) 矩阵M和列向量v的积mul(v, M) 行向量v和矩阵M的积Tips：A*B 表示向量A,B的分量相乘。如：(2,1,3) * (1,2,2) = (2,2,6)dot 点积，得到是一个标量。 如：（1，3，1）*（2，1，0)=1*2+3*1+1*0=5cross 叉积，得到一个垂直于向量 A,B 的向量。mul 矩阵参与的运算，一般用来空间变换。 a=(x1,y1,z1),b=(x2,y2,z2)a⋅b=x1x2+y1y2+z1z2= a   b cosθa×b=（y1z2−z1y2）i+（z1y2−x1z2）j+（x1y2−y1x2）k degrees(x) 输入参数为弧度值(radians)，函数将其转换为角度值(degrees)determinant(m) 计算矩阵的行列式因子。exp(x) 计算 ex的值，e=2.71828182845904523536exp2(x) 计算 2x 的值floor(x) 对输入参数向下取整。例如floor(float(1.3))返回的值为1.0；但是floor(float(-1.3))返回的值为-2.0。该函数与ceil(x)函数相对应。fmod(x,y) 返回x/y的余数。如果y为0，结果不可预料。frac(x) 返回标量或矢量的小数frexp(x, out i) 将浮点数x分解为尾数和指数，即x=m∗2i， 返回m，并将指数存入i中；如果x为0，则尾数和指数都返回0fwidth(x) 只能用在fragment shaderm 表示X和Y方向偏导数的绝对值的和，而单方向的偏导可以通过ddx和ddy, 即 abs(ddx(p)+ddy(p))isfinite(x) 判断标量或者向量中的每个数据是否是有限数，如果是返回true；否则返回false;isinf(x) 判断标量或者向量中的每个数据是否是无限，如果是返回true；否则返回false;isnan(x) 判断标量或者向量中的每个数据是否是非数据(not-a-number NaN)，如果是返回true；否则返回false;ldexp(x, n) 计算 x∗2n的值lerp(a, b, f) 计算(1−f)∗a+b∗f或者a+f∗(b−a)的值。即在下限a和上限b之间进行插值，f表示权值。注意，如果a和b是向量，则权值f必须是标量或者等长的向量。lit(NdotL, NdotH, m) N表示法向量；L表示入射光向量；H表示半角向量；m表示高光系数。 函数计算环境光、散射光、镜面光的贡献，返回的4元向量。 X位表示环境光的贡献，总是1.0; Y位代表散射光的贡献，如果 N∙L&lt;0，则为0；否则为N∙L Z位代表镜面光的贡献，如果N∙L&lt;0 或者N∙H&lt;0，则位0；否则为(N∙L)m;W位始终位1.0log(x) 计算 ln(x)的值，x必须大于0log2(x) 计算 log2(x) 的值，x必须大于0log10(x) 计算 log10(x) 的值，x必须大于0max(a, b) 比较两个标量或等长向量元素，返回最大值。min(a, b) 比较两个标量或等长向量元素，返回最小值。modf(x, out ip) 把x分解成整数和分数两部分，每部分都和x有着相同的符号，整数部分被保存在ip中，分数部分由函数返回noise(x) 根据它的参数类型，这个函数可以是一元、二元或三元噪音函数。返回的值在0和1之间，并且通常与给定的输入值一样pow(x, y) x的y次方，即xyradians(x) 函数将角度值转换为弧度值round(x)返回四舍五入值。rsqrt(x) x的平方根的倒数，即 1x√。 x必须大于0saturate(x) 把x限制到[0,1]之间sign(x)如果x&gt;0则返回1；否则返回0sin(x) 输入参数为弧度，计算正弦值，返回值范围 为[-1,1]sincos(float x, out s, out c) 该函数是同时计算x的sin值和cos值，其中s=sin(x)，c=cos(x)。该函数用于同时需要计算sin值和cos值，比分别运算要快很多!sinh(x) 计算x的双曲正弦smoothstep(min, max, x) 值x位于min、max区间中。如果x=min，返回0；如果x=max，返回1；如果x在两者之间返回xstep(a, x) 如果x&lt;a, 返回0；否则返回1sqrt(x) 求x的平方根，x√ ，x必须大于0tan(x) 计算x正切值tanh(x)计算x的双曲线切线transpose(M) 矩阵M的转置矩阵如果M是一个AxB矩阵，M的转置是一个BxA矩阵，它的第一列是M的第一行，第二列是M的第二行，第三列是M的第三行，等等几何函数distance(pt1, pt2) 两点之间的欧几里德距离（Euclidean distance）faceforward(N,I,Ng) 如果Ng∙I&lt;0，返回N；否则返回-N。length(v) 返回一个向量的模，即sqrt(dot(v,v))normalize(v) 返回v向量的单位向量reflect(I, N) 根据入射光线方向I和表面法向量N计算反射向量，仅对三元向量有效refract(I,N,eta) 根据入射光线方向I，表面法向量N和折射相对系数eta,计算折射向量。如果对给定的eta,I和N之间的角度太大，返回(0,0,0)。只对三元向量有效纹理映射函数tex1D(sampler1D tex, float s) 一维纹理查询tex1D(sampler1D tex, float s, float dsdx, float dsdy) 使用导数值（derivatives）查询一维纹理Tex1D(sampler1D tex, float2 sz) 一维纹理查询，并进行深度值比较Tex1D(sampler1D tex, float2 sz, float dsdx,float dsdy) 使用导数值（derivatives）查询一维纹理， 并进行深度值比较Tex1Dproj(sampler1D tex, float2 sq) 一维投影纹理查询Tex1Dproj(sampler1D tex, float3 szq) 一维投影纹理查询，并比较深度值Tex2D(sampler2D tex, float2 s) 二维纹理查询Tex2D(sampler2D tex, float2 s, float2 dsdx, float2 dsdy) 使用导数值（derivatives）查询二维纹理Tex2D(sampler2D tex, float3 sz) 二维纹理查询，并进行深度值比较Tex2D(sampler2D tex, float3 sz, float2 dsdx,float2 dsdy) 使用导数值（derivatives）查询二维纹理，并进行深度值比较Tex2Dproj(sampler2D tex, float3 sq) 二维投影纹理查询Tex2Dproj(sampler2D tex, float4 szq) 二维投影纹理查询，并进行深度值比较texRECT(samplerRECT tex, float2 s) 二维非投影矩形纹理查询（OpenGL独有）texRECT (samplerRECT tex, float3 sz, float2 dsdx,float2 dsdy) 二维非投影使用导数的矩形纹理查询（OpenGL独有）texRECT (samplerRECT tex, float3 sz) 二维非投影深度比较矩形纹理查询（OpenGL独有）texRECT (samplerRECT tex, float3 sz, float2 dsdx,float2 dsdy) 二维非投影深度比较并使用导数的矩形纹理查询（OpenGL独有）texRECT proj(samplerRECT tex, float3 sq) 二维投影矩形纹理查询（OpenGL独有）texRECT proj(samplerRECT tex, float3 szq) 二维投影矩形纹理深度比较查询（OpenGL独有）Tex3D(sampler3D tex, float s ) 三维纹理查询Tex3D(sampler3D tex, float3 s, float3 dsdx, float3 dsdy) 结合导数值（derivatives）查询三维纹理Tex3Dproj(sampler3D tex, float4 szq) 查询三维投影纹理，并进行深度值比较texCUBE(samplerCUBE tex, float3 s) 查询立方体纹理texCUBE (samplerCUBE tex, float3 s, float3 dsdx, float3 dsdy) 结合导数值（derivatives）查询立方体纹理texCUBEproj (samplerCUBE tex, float4 sq) 查询投影立方体纹理在这个表中，每个函数第二个参数的名字指明了在执行纹理查询的时候，它的值是如果被使用的:s表示这是一个一元、二元或三元纹理坐标。z表示这是一个用来进行阴影贴图查找的深度比较值。q表示这是一个透视值，在进行纹理查找之前，它被用来除以纹理坐标（s）。当你使用的纹理函数允许你指定一个深度比较值的时候，与之相关联的纹理单元必须被设置成深度比较纹理。否则，深度比较实际上不会被执行。偏导函数ddx(a) 近似a关于屏幕空间x轴的偏导数ddy(a)近似a关于屏幕空间y轴的偏导数调试函数void debug(float4 x) 如果在编译时设置了DEBUG，片段着 色程序中调用该函数可以将值x作为COLOR语义的最终输出；否则该函数什么也不做。HLSL函数和glsl映射 HLSL GLSL ddx dFdx atan2(y,x) atan(x,y) ddx_coarse dFdxCoarse ddx_fine dFdxFine ddy dFdy ddy_coarse dFdyCoarse ddy_fine dFdyFine EvaluateAttributeAtCentroid interpolateAtCentroid EvaluateAttributeAtSample interpolateAtSample EvaluateAttributeSnapped interpolateAtOffset frac fract lerp mix mad fma saturate clamp(x, 0.0, 1.0) ​\t\t\t“Time after time have given me new courage to face life cheerfully, have been Kindness, Beauty, and Truth. “ —Albert Einstein" }, { "title": "【UE C++】接口", "url": "/posts/UEC++-%E6%8E%A5%E5%8F%A3/", "categories": "Blogging, UEC++", "tags": "C++, 指针", "date": "2022-07-01 00:55:00 +0800", "snippet": "UE\tC++接口接口UE语言具备C++多继承特性，但是由于UE对C++进行了深度定制，强制了继承自UObject的类只能继承一个具有完整属性行为的父类，其他继承关系以接口来实现，接口只定义了行为的框架，不具有具体的逻辑行为（无实现），需要继承自接口的类自己实现接口逻辑。接口优点1.具备多态特性，接口衍生类支持里氏转换原则（子类可以向父类合理转换） ；2.接口可以使得整个继承系统更加的干净单一 ；3.接口可以规范类的具体行为，继承自接口的类必须实现接口内的所有行为 ；4.接口可以隔离开发中的开发耦合，我们只需要针对接口进行编程，无需关心对接逻辑的实现；5.接口继承可以使得继承关系中出现真正的父类；接口缺点1.失去了C++中的广泛继承特性 ；2.接口拘束了类型的属性拓展，无法进行更详细的内容定义 ；3.继承关系中容易让人混淆，接口本身不具备真正的继承特性；UE中的接口操作1.继承UObject然后开始改良2.确认接口名称，需要构建两个类，分别使用U和I进行类名前缀标记3.U类名上加入宏UINTERFACE(Blueprintable)，并继承UInterface4.U类内加入宏 GENERATED_UINTERFACE_BODY()5.I类内加入宏GENERATED_IINTERFACE_BODY()6.在CPP文件中加入U类构造函数实现，U类头文件中无需加入函数声明，此函数由宏进行构建语法如下 U类名：：U类名(const FObjectInitializer&amp; ObjectInitializer) : Super(ObjectInitializer)7.接口函数定在I类中，标记为public，并引入头文件8.继承类中继承接口I类，标记继承关系public9.在继承类中实现接口函数，并添加后缀_Implementation，需要注意，函数前加入虚函数关键字virtual，函数结尾加override关键字10.在对象继承接口的CPP中实现函数，编写逻辑，和普通函数一样 __11.调用函数，持有继承接口对象指针，第一步先转换到I类型接口指针，使用Execute_接口函数名，参数第一位需要传递原对象指针，后面直接编写函数即可12.检查某一个类是否实现了对应接口可以使用如下语法进行检查 obj-&gt;GetClass()-&gt;ImplementsInterface(U类型：：StaticClass（）); 建议通过Unreal内部接口模板进行构建，即创建接口类时可以通过Unreal Interface进行构建，可以直接跳过8以前步骤代理为了解决回调通知中，对象类型不同，无法使用同一容器进行存储的问题。主要达到的目的是调用某个对象的函数，可以不知道对象类型也可以完成操作。 UE中的代理分为 单播代理 多播代理单播代理只进行一个目标对象的通知构建单播代理需要注意，构建宏分为两种，一种是有返回类型的构建宏，一种是没有返回类型的构建宏函数BindUObject 绑定UObject类型对象成员函数的代理BindSP 绑定基于共享引用的成员函数代理BindRaw 绑定原始自定义对象成员函数的代理，操作调用需要注意执行需要检查IsBoundBindStatic 绑定全局函数成为代理UnBind 解除绑定代理关系调用为了保证调用的安全性，执行Execute函数之前需要检查是否存在有效绑定使用函数IsBoundExecute 调用代理通知，不安全，需要注意ExecuteIfBound 调用代理通知，安全，但是有返回类型的回调函数无法使用此函数执行回调IsBound 检查当前是否存在有效代理绑定构建步骤1.通过宏进行声明代理对象类型（根据回调函数选择不同的宏）2.使用代理类型进行构建代理对象3.绑定回调对象，和操作函数4.执行代理对象回调多播代理实现目标效果，可以达到一对多的广播回调 UE中的多播缺陷无法进行绑定有返回类型的函数 多播代理无法使用带有返回值的函数进行构建构建宏DECLARE_MULTICAST_DELEGATE_OneParam(DelegateMulOne, int32);支持多参数传递，需要选择不同的宏进行构建函数AddUObject 添加一个Uob类型对象的成员函数为代理AddStatic 添加一个全局函数为代理函数AddSP 添加一个基于共享指针的成员函数为代理AddRaw 添加一个由C++构建的函数为代理 Remove 将函数从多播代理中移除RemoveAll 清空多播代理列表广播调用函数Broadcast，但是调用不保证执行顺序的正确性，调用之前必须需要检查IsBound是否有效构建步骤1.使用宏构建代理类型2.使用代理类型构建多播代理对象3.添加绑定代理4.执行调用 移除操作 添加函数到多播代理队列时会返回代理句柄，可用于移除时提供句柄参数使用，帮助我们移除指定的函数出代理队列 Remove（FDelegateHandle）事件Event事件本身和多播代理一样，只是为了代理对象的安全性，事件提供了额外的操作限定，即禁止在声明事件对象的外部调用事件传播，清理，检查等函数，通过操作隔离，最大程度的增加了事件的安全性。派生类允许调用事件的广播。构建宏DECLARE_EVENT_OneParam(ALeassonUECPPGameModeBase, DelEventOne, int32);事件类型构建宏由于需要限定事件对象调用约束关系，需要提供声明所在类型函数AddUObject 添加一个Uob类型对象的成员函数为代理AddStatic 添加一个全局函数为代理函数AddSP 添加一个基于共享指针的成员函数为代理AddRaw 添加一个由C++构建的函数为代理Remove 将函数从多播代理中移除RemoveAll 清空多播代理列表广播调用函数Broadcast，但是调用不保证执行顺序的正确性，调用之前必须需要检查IsBound是否有效移除操作添加函数到多播代理队列时会返回代理句柄，可用于移除时提供句柄参数使用，帮助我们移除指定的函数出代理队列Remove（FDelegateHandle）构建步骤1.使用宏构建代理类型2.使用代理类型构建多播代理对象3.添加绑定代理4.执行调用​\t\t\t“Time after time have given me new courage to face life cheerfully, have been Kindness, Beauty, and Truth. “ —Albert Einstein" }, { "title": "【UE C++】智能指针", "url": "/posts/UEC++%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/", "categories": "Blogging, UEC++", "tags": "UE4, UEC++, TSharedPtr", "date": "2022-06-30 23:32:00 +0800", "snippet": "UE C++智能指针虚幻智能指针库 是共享引用(TSharedRef)、共享指针 (TSharedPtr)、弱指针(TWeakPtr)及其他相关辅助函数及类的自定义实现。 该实现是根据 C++0x 标准库的 shared_ptr 和 Boost 的智能指针建模的。类型\t描述共享指针 (TSharedPtr)\t引用计数的非侵入式的权威智能指针。共享引用 (TSharedRef)\t不能设置为null值的、引用计数的、非侵入式权威智能指针。弱指针 (TWeakPtr)\t引用计数的、非侵入式弱指针引用。共享引用和共享指针的优点优点\t描述简洁的语法\t您可以像操作常规的C++指针那样来复制、解引用及比较共享指针。防止内存泄露\t当没有共享引用时资源自动销毁。弱引用\t弱指针允许您安全地检查一个对象是否已经被销毁。线程安全\t包含了可以通过多个线程安全地进行访问的”线程安全”版本。普遍性\t您几乎可以创建到 任何 类型的对象的共享指针。运行时安全\t共享引用永远不会为null，且总是可以进行解引用。不会产生引用循环\t使用弱引用来断开引用循环。表明用途\t您可以轻松地区分对象 拥有者 和 观察者 。性能\t共享指针的性能消耗最小。 所有操作所占时间都是固定的。强大的功能\t支持针’const’、前置声明的不完全类型、类型转换等。内存\t所占内存大小是C++指针在64-位系统中所占内存的二倍 (外加了一个共享的16字节的引用控制器。)创建自定义库的原因std::shared_ptr (and even tr1::shared_ptr)不是在所有平台上都可用。使得在所有编译器和平台上有更加一致的实现。可以和其他虚幻容器及类型无缝地协作。更好地控制平台特性，包括线程处理和优化。我们想提供线程安全的功能 (以获得好的性能)。我们已经添加了我们自己的改进(MakeShareable、赋值为NULL等)。在我们的实现中不需要也不希望出现异常。我们想在性能方面有更多的控制权 (内联函数、内存、虚函数的应用等)。更轻松地进行调试(自由的代码注释等)。在不需要的时候倾向于不引入新的第三方依赖。辅助类和函数在库中，以类和函数的形式提供了几个辅助功能，以便使得应用智能指针变得更加容易、更加直观。辅助功能\t描述类TSharedFromThis\t您可以让您自己的类继承这个类，来从“this”获得而一个TSharedRef 。函数MakeShareable()\t用于通过C++指针初始化共享指针(启用隐式转换) 。StaticCastSharedRef()\t静态类型转换效用函数，一般用于向下类型转换为派生类型。ConstCastSharedRef()\t将一个’const(常量的)’引用转换为’mutable（可变的）’智能引用。DynamicCastSharedRef()\t动态类型转换效用函数，一般用于向下类型转换为派生类型。StaticCastSharedPtr()\t静态类型转换效用函数，一般用于向下类型转换为派生类型。ConstCastSharedPtr()\t将一个’const(常量的)’引用转换为’mutable（可变的）’智能指针。DynamicCastSharedPtr()\t动态类型转换效用函数，一般用于向下类型转换为派生类型。智能指针实现细节虚幻智能指针库中的各种智能指针类型的实现在性能、内存等方面都具有一些共有的特性。性能当考虑使用共享指针时要时刻记住性能问题。共享指针的执行速度一般是非常快的；然而，这并不意味着任何地方都使用它。它们非常适用于某些高层系统或者工具编程，但不是很适合底层的引擎/路径渲染。共享指针的在性能方面的一些优势有：所有操作所占时间都是固定的。共享指针解引用的速度和C++指针一样快。复制共享指针永远不会分配内存。线程安全的版本是无锁的。和Boost或STL相比，其实现更快。共享指针在性能方面的劣势包括：创建及复制指针所带来的性能消耗。引用计数内务处理。共享指针使用的内存比C++指针多。引用控制器的额外的堆分配。由多个共享指针引用的每个独立对象都有性能消耗。弱指针访问速度比共享指针访问速度略慢。内存使用量所有的共享指针 (TSharedPtr, TSharedRef, TWeakPtr)都占8个字节(当针对32-位系统编译时)，包括：C++ 指针(无符号32位整型)引用控制器指针 (无符号32位整型)TSharedFromThis 也占8个字节，因为它内嵌了弱指针。引用控制器对象占12个字节(当针对32-位系统编译时)，包括：C++ 指针(无符号32位整型)共享引用计数(无符号32位整型)弱引用计数(无符号32位整型)无论有多少个 共享指针/弱指针 引用一个对象，都仅为每个对象创建一个引用控制器。反射共享指针是非侵入式的，这意味着该类本身不知道它是否属于另一个共享指针（或引用）。一般，这是可以的，但有时候您想把当前实例作为共享引用访问。这种情况的解决方法是让该类继承于 TSharedFromThis&lt;&gt; 。通过继承 TSharedFromThis&lt;&gt; ，您可以使用 AsSharedRef() 方法来将’this’转换为一个共享引用。 这对于总是返回共享引用的类工厂是非常有用的。class FAnimation : public TSharedFromThis&lt;FMyClass&gt;{    void Register()    {        // Access a shared reference to 'this'        TSharedRef&lt;FMyClass&gt; SharedThis = AsSharedRef();        // Class a function that is expecting a shared reference        AnimationSystem::RegisterAnimation( SharedThis );    }}类型转换您可以轻松地对共享指针(及引用)进行类型转换。和C++中的指针一样，向上类型转换是隐式的。针对常量型指针进行类型转换(很不好，但有时候需要这样做):ConstCastSharedPtr( … )静态类型转换(通常用于向下类型转换为派生类指针):StaticCastSharedPtr( … )不支持动态类型转换(没有运行时类型信息)。 此时，您可以使用上面的静态类型转换。线程安全性常规的共享指针仅在单线程上访问是安全的。如果您需要多线程访问共享指针，那么请使用指针类的线程安全版本：TThreadSafeSharedPtrTThreadSafeSharedRefTThreadSafeWeakPtrTThreadSafeSharedFromThis&lt;&gt;由于这些版本存在自动引用计数，所以运行速度略慢，但其行为和常规的C++指针几乎一样。读取和复制时总是线程安全的。写入/重置时必须进行同步才能确保安全。如果您知道永远不会有多个线程访问您的指针，那么请不要使用线程安全版本。应用详情SharedPointerTesting.h 文件 (位于 [UE4RootLocation]/Engine/Source/Runtime/Core/Public/Templates/) 包含了使用共享指针和共享引用的各种示例。技巧一般，当向一个新共享指针中传入一个C++指针时，您应该使用操作符“new”。当传入智能指针作为函数参数时请使用 TSharedRef 或 TSharedPtr ，而不是使用TWeakPtr。智能指针的“线程安全”版本运行速度略慢 – 仅在需要的时候使用。您可以按照所期望的方式把共享指针前置声明为不完全类型!将会隐式地转换兼容的共享指针类型 (比如，向上类型转换)。您可以创建一个针对 TSharedRef&lt; MyClass &gt; 的类型定义，以方便书写。为获得最佳性能，要最小化调用 TWeakPtr::Pin (or conversions to TSharedRef/TSharedPtr) 的次数。如果您的类继承 TSharedFromThis ，那么它可以将其本身返回为共享引用。要想把一个指针向下类型转换为一个派生对象类，请使用 StaticCastSharedPtr() 函数。共享指针完全支持 const 对象！使用 ConstCastSharedPtr() 函数，您可以把一个 const(常量) 共享指针转换为可变的共享指针。在深堆栈帧中，应该把共享指针转换为C++引用。共享指针最好用于成员引用，而不是堆栈临时变量。和C++指针不同，共享指针不能进行内存复制，所以在使用共享指针数组时一定要考虑到这个问题。限制共享指针和虚幻对象(UObject类)不兼容 !目前仅是具有正常析构器的类型 (没有自定义的删除功能)。还不支持动态分配的数组 (比如 MakeSharable( new int32[20] ))。不支持将 TSharedPtr/TSharedRef 隐式地转换为布尔值。和其他实现的区别类型名称和方法名称和虚幻引擎的基础代码保持了更好的一致性。线程安全功能是可选的，而不是强制要求。TSharedFromThis 返回一个共享 引用，而不是共享 指针 。略掉了某些功能 (比如 use_count() 、 unique(), 等)。不允许异常 (略掉了所有的相关功能)。还不支持自定义分配器和自定义的删除功能。我们的实现支持不能为null的共享指针(TSharedRef)。添加了一些其他功能，比如 MakeShareable 和 NULL 赋值。​\t\t\t“Time after time have given me new courage to face life cheerfully, have been Kindness, Beauty, and Truth. “ —Albert Einstein" }, { "title": "Enable Google Page Views", "url": "/posts/enable-google-pv/", "categories": "Blogging, Tutorial", "tags": "google analytics, pageviews", "date": "2021-01-04 07:32:00 +0800", "snippet": "This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it’s recommended to keep the google_analytics.pv.* empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let’s start with the setup.Set up Google AnalyticsCreate GA account and propertyFirst, you need to set up your account on Google analytics. While you create your account, you must create your first Property as well. Head to https://analytics.google.com/ and click on Start Measuring Enter your desired Account Name and choose the desired checkboxes Enter your desired Property Name. This is the name of the tracker project that appears on your Google Analytics dashboard Enter the required information About your business Hit Create and accept any license popup to set up your Google Analytics account and create your propertyCreate Data StreamWith your property created, you now need to set up Data Stream to track your blog traffic. After you signup, the prompt should automatically take you to create your first Data Stream. If not, follow these steps: Go to Admin on the left column Select the desired property from the drop-down on the second column Click on Data Streams Add a stream and click on Web Enter your blog’s URLIt should look like this:Now, click on the new data stream and grab the Measurement ID. It should look something like G-V6XXXXXXXX. Copy this to your _config.yml file:google_analytics: id: 'G-V6XXXXXXX' # fill in your Google Analytics ID # Google Analytics pageviews report settings pv: proxy_endpoint: # fill in the Google Analytics superProxy endpoint of Google App Engine cache_path: # the local PV cache data, friendly to visitors from GFW regionWhen you push these changes to your blog, you should start seeing the traffic on your Google Analytics. Play around with the Google Analytics dashboard to get familiar with the options available as it takes like 5 mins to pick up your changes. You should now be able to monitor your traffic in real time.Setup Page ViewsThere is a detailed tutorial available to set up Google Analytics superProxy. But, if you are interested to just quickly get your Chirpy-based blog display page views, follow along. These steps were tested on a Linux machine. If you are running Windows, you can use the Git bash terminal to run Unix-like commands.Setup Google App Engine Visit https://console.cloud.google.com/appengine Click on Create Application Click on Create Project Enter the name and choose the data center close to you Select Python language and Standard environment Enable billing account. Yeah, you have to link your credit card. But, you won’t be billed unless you exceed your free quota. For a simple blog, the free quota is more than sufficient. Go to your App Engine dashboard on your browser and select API &amp; Services from the left navigation menu Click on Enable APIs and Services button on the top Enable the following APIs: Google Analytics API On the left, Click on OAuth Consent Screen and accept Configure Consent Screen. Select External since your blog is probably hosted for the public. Click on Publish under Publishing Status Click on Credentials on the left and create a new OAuth Client IDs credential. Make sure to add an entry under Authorized redirect URIs that matches: https://&lt;project-id&gt;.&lt;region&gt;.r.appspot.com/admin/auth Note down the Your Client ID and Your Client Secret. You’ll need this in the next section. Download and install the cloud SDK for your platform: https://cloud.google.com/sdk/docs/quickstart Run the following commands: [root@bc96abf71ef8 /]# gcloud init~snip~Go to the following link in your browser: https://accounts.google.com/o/oauth2/auth?response_type=code&amp;client_id=XYZ.apps.googleusercontent.com&amp;redirect_uri=ABCDEFGEnter verification code: &lt;VERIFICATION CODE THAT YOU GET AFTER YOU VISIT AND AUTHENTICATE FROM THE ABOVE LINK&gt;You are logged in as: [blah_blah@gmail.com].Pick cloud project to use:[1] chirpy-test-300716[2] Create a new projectPlease enter numeric choice or text value (must exactly match listitem): 1[root@bc96abf71ef8 /]# gcloud info# Your selected project info should be displayed here Setup Google Analytics superProxy Clone the Google Analytics superProxy project on Github: https://github.com/googleanalytics/google-analytics-super-proxy to your local. Remove the first 2 lines in the src/app.yaml file: - application: your-project-id- version: 1 In src/config.py, add the OAUTH_CLIENT_ID and OAUTH_CLIENT_SECRET that you gathered from your App Engine Dashboard. Enter any random key for XSRF_KEY, your config.py should look similar to this #!/usr/bin/python2.7__author__ = 'pete.frisella@gmail.com (Pete Frisella)'# OAuth 2.0 Client SettingsAUTH_CONFIG = { 'OAUTH_CLIENT_ID': 'YOUR_CLIENT_ID', 'OAUTH_CLIENT_SECRET': 'YOUR_CLIENT_SECRET', 'OAUTH_REDIRECT_URI': '%s%s' % ( 'https://chirpy-test-XXXXXX.ue.r.appspot.com', '/admin/auth' )}# XSRF SettingsXSRF_KEY = 'OnceUponATimeThereLivedALegend' You can configure a custom domain instead of https://PROJECT_ID.REGION_ID.r.appspot.com.But, for the sake of keeping it simple, we will be using the Google provided default URL. From inside the src/ directory, deploy the app [root@bc96abf71ef8 src]# gcloud app deployServices to deploy:descriptor: [/tmp/google-analytics-super-proxy/src/app.yaml]source: [/tmp/google-analytics-super-proxy/src]target project: [chirpy-test-XXXX]target service: [default]target version: [VESRION_NUM]target url: [https://chirpy-test-XXXX.ue.r.appspot.com]Do you want to continue (Y/n)? YBeginning deployment of service [default]...╔════════════════════════════════════════════════════════════╗╠═ Uploading 1 file to Google Cloud Storage ═╣╚════════════════════════════════════════════════════════════╝File upload done.Updating service [default]...done.Setting traffic split for service [default]...done.Deployed service [default] to [https://chirpy-test-XXXX.ue.r.appspot.com]You can stream logs from the command line by running:$ gcloud app logs tail -s defaultTo view your application in the web browser run:$ gcloud app browse Visit the deployed service. Add a /admin to the end of the URL. Click on Authorize Users and make sure to add yourself as a managed user. If you get any errors, please Google it. The errors are self-explanatory and should be easy to fix. If everything went good, you’ll get this screen:Create Google Analytics QueryHead to https://PROJECT_ID.REGION_ID.r.appspot.com/admin and create a query after verifying the account. GA Core Reporting API query request can be created in Query Explorer.The query parameters are as follows: start-date: fill in the first day of blog posting end-date: fill in today (this is a parameter supported by GA Report, which means that it will always end according to the current query date) metrics: select ga:pageviews dimensions: select ga:pagePathIn order to reduce the returned results and reduce the network bandwidth, we add custom filtering rules 1: filters: fill in ga:pagePath=~^/posts/.*/$;ga:pagePath!@=. Among them, ; means using logical AND to concatenate two rules. If the site.baseurl is specified, change the first filtering rule to ga:pagePath=~^/BASE_URL/posts/.*/$, where BASE_URL is the value of site.baseurl. After Run Query, copy the generated contents of API Query URI at the bottom of the page and fill in the Encoded URI for the query of SuperProxy on GAE.After the query is saved on GAE, a Public Endpoint (public access address) will be generated, and we will get the query result in JSON format when accessing it. Finally, click Enable Endpoint in Public Request Endpoint to make the query effective, and click Start Scheduling in Scheduling to start the scheduled task.Configure Chirpy to Display Page ViewOnce all the hard part is done, it is very easy to enable the Page View on Chirpy theme. Your superProxy dashboard should look something like below and you can grab the required values.Update the _config.yml file of Chirpy project with the values from your dashboard, to look similar to the following:google_analytics: id: 'G-V6XXXXXXX' # fill in your Google Analytics ID pv: proxy_endpoint: 'https://PROJECT_ID.REGION_ID.r.appspot.com/query?id=&lt;ID FROM SUPER PROXY&gt;' cache_path: # the local PV cache data, friendly to visitors from GFW regionNow, you should see the Page View enabled on your blog.Reference Google Analytics Core Reporting API: Filters &#8617; " }, { "title": "Customize the Favicon", "url": "/posts/customize-the-favicon/", "categories": "Blogging, Tutorial", "tags": "favicon", "date": "2019-08-11 00:34:00 +0800", "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files: browserconfig.xml site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn’t have this directory yet, just create one.The following table will help you understand the changes to the favicon files: File(s) From Online Tool From Chirpy *.PNG ✓ ✗ *.ICO ✓ ✗ ✓ means keep, ✗ means delete.The next time you build the site, the favicon will be replaced with a customized edition." }, { "title": "Getting Started", "url": "/posts/getting-started/", "categories": "Blogging, Tutorial", "tags": "getting started", "date": "2019-08-09 20:55:00 +0800", "snippet": "PrerequisitesFollow the instructions in the Jekyll Docs to complete the installation of Ruby, RubyGems, Jekyll, and Bundler. In addition, Git is also required to be installed.InstallationCreating a New SiteThere are two ways to create a new repository for this theme: Using the Chirpy Starter - Easy to upgrade, isolates irrelevant project files so you can focus on writing. Forking on GitHub - Convenient for custom development, but difficult to upgrade. Unless you are familiar with Jekyll and are determined to tweak or contribute to this project, this approach is not recommended.Option 1. Using the Chirpy StarterCreate a new repository from the Chirpy Starter and name it &lt;GH_USERNAME&gt;.github.io, where GH_USERNAME represents your GitHub username.Option 2. Forking on GitHubFork Chirpy on GitHub and rename it to &lt;GH_USERNAME&gt;.github.io. Please note that the default branch code is in development. If you want the site to be stable, please switch to the latest tag and start writing.And then execute:$ bash tools/init.sh If you don’t want to deploy your site on GitHub Pages, append option --no-gh at the end of the above command.The above command will: Removes some files or directories from your repository: .travis.yml files under _posts If the option --no-gh is provided, the directory .github will be deleted. Otherwise, set up the GitHub Action workflow by removing the extension .hook of .github/workflows/pages-deploy.yml.hook, and then remove the other files and directories in the folder .github. Removes item Gemfile.lock from .gitignore. Creates a new commit to save the changes automatically.Installing DependenciesBefore running for the first time, go to the root directory of your site, and install dependencies as follows:$ bundleUsageConfigurationUpdate the variables of _config.yml as needed. Some of them are typical options: url avatar timezone langCustoming StylesheetIf you need to customize the stylesheet, copy the theme’s assets/css/style.scss to the same path on your Jekyll site, and then add the custom style at the end of the style file.Starting from v4.1.0, if you want to overwrite the SASS variables defined in _sass/addon/variables.scss, create a new file _sass/variables-hook.scss and assign new values to the target variable in it.Customing Static AssetsStatic assets configuration was introduced in version 5.1.0. The CDN of the static assets is defined by file _data/assets/cross_origin.yml, and you can replace some of them according to the network conditions in the region where your website is published.Also, if you’d like to self-host the static assets, please refer to the chirpy-static-assets.Running Local ServerYou may want to preview the site contents before publishing, so just run it by:$ bundle exec jekyll sOr run the site on Docker with the following command:$ docker run -it --rm \\ --volume=\"$PWD:/srv/jekyll\" \\ -p 4000:4000 jekyll/jekyll \\ jekyll serveAfter a while, the local service will be published at http://127.0.0.1:4000.DeploymentBefore the deployment begins, check out the file _config.yml and make sure the url is configured correctly. Furthermore, if you prefer the project site and don’t use a custom domain, or you want to visit your website with a base URL on a web server other than GitHub Pages, remember to change the baseurl to your project name that starts with a slash, e.g, /project-name.Now you can choose ONE of the following methods to deploy your Jekyll site.Deploy by Using Github ActionsFor security reasons, GitHub Pages build runs on safe mode, which restricts us from using plugins to generate additional page files. Therefore, we can use GitHub Actions to build the site, store the built site files on a new branch, and use that branch as the source of the GitHub Pages service.Quickly check the files needed for GitHub Actions build: Ensure your Jekyll site has the file .github/workflows/pages-deploy.yml. Otherwise, create a new one and fill in the contents of the sample file, and the value of the on.push.branches should be the same as your repo’s default branch name. Ensure your Jekyll site has file tools/deploy.sh. Otherwise, copy it from here to your Jekyll site. Furthermore, if you have committed Gemfile.lock to the repo, and your runtime system is not Linux, don’t forget to update the platform list in the lock file: $ bundle lock --add-platform x86_64-linux After the above steps, rename your repository to &lt;GH_USERNAME&gt;.github.io on GitHub.Now publish your Jekyll site by: Push any commit to remote to trigger the GitHub Actions workflow. Once the build is complete and successful, a new remote branch named gh-pages will appear to store the built site files. Browse to your repository on GitHub. Select the tab Settings, then click Pages in the left navigation bar, and then in the section Source of GitHub Pages, select the /(root) directory of branch gh-pages as the publishing source. Remember to click Save before leaving. Visit your website at the address indicated by GitHub. Manually Build and DeployOn self-hosted servers, you cannot enjoy the convenience of GitHub Actions. Therefore, you should build the site on your local machine and then upload the site files to the server.Go to the root of the source project, and build your site as follows:$ JEKYLL_ENV=production bundle exec jekyll bOr build the site on Docker:$ docker run -it --rm \\ --env JEKYLL_ENV=production \\ --volume=\"$PWD:/srv/jekyll\" \\ jekyll/jekyll \\ jekyll buildUnless you specified the output path, the generated site files will be placed in folder _site of the project’s root directory. Now you should upload those files to the target server.UpgradingIt depends on how you use the theme: If you are using the theme gem (there will be gem \"jekyll-theme-chirpy\" in the Gemfile), editing the Gemfile and update the version number of the theme gem, for example: - gem \"jekyll-theme-chirpy\", \"~&gt; 3.2\", \"&gt;= 3.2.1\"+ gem \"jekyll-theme-chirpy\", \"~&gt; 3.3\", \"&gt;= 3.3.0\" And then execute the following command: $ bundle update jekyll-theme-chirpy As the version upgrades, the critical files (for details, see the Startup Template) and configuration options will change. Please refer to the Upgrade Guide to keep your repo’s files in sync with the latest version of the theme. If you forked from the source project (there will be gemspec in the Gemfile of your site), then merge the latest upstream tags into your Jekyll site to complete the upgrade.The merge is likely to conflict with your local modifications. Please be patient and careful to resolve these conflicts. " }, { "title": "Writing a New Post", "url": "/posts/write-a-new-post/", "categories": "Blogging, Tutorial", "tags": "writing", "date": "2019-08-08 14:10:00 +0800", "snippet": "This post will guide you how to write a post on Chirpy theme. Even if you have previous experience with Jekyll, this article is worth reading, because many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG] # TAG names should always be lowercase--- The posts’ layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post’s timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Add author information in _data/authors.yml (If your website doesn’t have this file, don’t hesitate to create one.)&lt;author_id&gt;: name: &lt;full name&gt; twitter: &lt;twitter_of_author&gt; url: &lt;homepage_of_author&gt;And then set up the custom author in the post’s YAML block:---author: &lt;author_id&gt;--- Another benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post’s Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won’t be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an image，then it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }Starting from Chirpy v5.0.0, height and width support abbreviations (height → h, width → w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right. Once the position is specified, the image caption should not be added. Normal position Image will be left aligned in below sample: ![Desktop View](/assets/img/sample/mockup.png){: .normal } Float to the left ![Desktop View](/assets/img/sample/mockup.png){: .left } Float to the right ![Desktop View](/assets/img/sample/mockup.png){: .right } ShadowThe screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the light mode:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&lt;img src=\"https://cdn.com/path/to/flower.png\" alt=\"The flower\"&gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&lt;img src=\"/img/path/flower.png\" alt=\"The flower\"&gt;Preview ImageIf you want to add an image to the top of the post contents, specify the attribute path, width, height, and alt for the image:---image: path: /path/to/image/file width: 1000 # in pixels height: 400 # in pixels alt: image alternative text---Except for alt, all other options are necessary, especially the width and height, which are related to user experience and web page loading performance. The above section “Size” also mentions this.Starting from Chirpy v5.0.0, the attributes height and width can be abbreviated: height → h, width → w. In addition, the img_path can also be passed to the preview image, that is, when it has been set, the attribute path only needs the image file name.Pinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value``` The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %} This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post’s YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts." }, { "title": "Text and Typography", "url": "/posts/text-and-typography/", "categories": "Blogging, Demo", "tags": "typography", "date": "2019-08-08 11:33:00 +0800", "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let’s start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphI wandered lonely as a cloudThat floats on high o’er vales and hills,When all at once I saw a crowd,A host, of golden daffodils;Beside the lake, beneath the trees,Fluttering and dancing in the breeze.ListsOrdered list Firstly Secondly ThirdlyUnordered list Chapter Section Paragraph Task list TODO Completed Defeat COVID-19 Vaccine production Economic recovery People smile again Description list Sun the star around which the earth orbits Moon the natural satellite of the earth, visible by reflected light from the sunBlock Quote This line shows the block quote.Prompts An example showing the tip type prompt. An example showing the info type prompt. An example showing the warning type prompt. An example showing the danger type prompt.Tables Company Contact Country Alfreds Futterkiste Maria Anders Germany Island Trading Helen Bennett UK Magazzini Alimentari Riuniti Giovanni Rovelli Italy Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Images Default (with caption)Full screen width and center alignment Shadowshadow effect (visible in light mode) Left aligned Float to left “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.” Float to right “A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space. A repetitive and meaningless text is used to fill the space.” Mermaid SVG gantt title Adding GANTT diagram functionality to mermaid apple :a, 2017-07-20, 1w banana :crit, b, 2017-07-23, 1d cherry :active, c, after b a, 1dMathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blockCommonThis is a common code snippet, without syntax highlight and line number.Specific LanguagesConsole$ env |grep SHELLSHELL=/usr/local/bin/bashPYENV_SHELL=bashShellif [ $? -ne 0 ]; then echo \"The command was not successful.\"; #do the needful / exitfi;Specific filename@import \"colors/light-typography\", \"colors/dark-typography\"Reverse Footnote The footnote source &#8617; The 2nd footnote source &#8617; " } ]
